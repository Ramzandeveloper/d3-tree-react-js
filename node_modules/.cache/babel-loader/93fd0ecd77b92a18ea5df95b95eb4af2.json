{"ast":null,"code":"import _classCallCheck from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _jsxFileName = \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js\",\n    _directSalesChannel$,\n    _directSalesChannel$$;\n\nimport React from \"react\";\nimport Tree from \"react-d3-tree\";\nimport axios from \"axios\";\nimport defaultArray from './array';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar directSalesChannel = defaultArray.filter(function (item) {\n  return item.channelName === \"Indirect Sales Channel\";\n});\nvar directSalesChannelList = (_directSalesChannel$ = directSalesChannel[0]) === null || _directSalesChannel$ === void 0 ? void 0 : (_directSalesChannel$$ = _directSalesChannel$.subChannel) === null || _directSalesChannel$$ === void 0 ? void 0 : _directSalesChannel$$.map(function (item) {\n  return {\n    name: item.channelName\n  };\n});\nvar debugData = [{\n  name: \"SALAM DMS\",\n  children: [{\n    name: \"Indirect Sales Channel\",\n    children: [directSalesChannelList[0]]\n  }]\n}];\nconsole.log(\"dataForRender\", debugData);\nvar containerStyles = {\n  width: \"100%\",\n  height: \"100vh\"\n};\nvar svgSquare = {\n  shape: \"rect\",\n  shapeProps: {\n    width: 20,\n    height: 20,\n    x: -10,\n    y: -10\n  }\n};\nvar headers = defaultArray.map(function (item) {\n  return {\n    name: item.channelName != null ? item.channelName : \"\"\n  };\n});\nconsole.log(\"headers\", headers);\n\nvar CenteredTree = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(CenteredTree, _React$PureComponent);\n\n  var _super = _createSuper(CenteredTree);\n\n  function CenteredTree() {\n    var _this;\n\n    _classCallCheck(this, CenteredTree);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      records: \"\",\n      headerRecords: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(CenteredTree, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dimensions = this.treeContainer.getBoundingClientRect();\n      this.setState({\n        translate: {\n          x: dimensions.width / 10,\n          y: dimensions.width / 3\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      {\n        console.log(\"defaultArray\", defaultArray);\n      }\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: containerStyles,\n        ref: function ref(tc) {\n          return _this2.treeContainer = tc;\n        },\n        children: /*#__PURE__*/_jsxDEV(Tree, {\n          data: debugData,\n          translate: this.state.translate,\n          orientation: \"horizontal\",\n          nodeSvgShape: svgSquare,\n          circleRadius: 5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return CenteredTree;\n}(React.PureComponent);\n\nexport { CenteredTree as default };","map":{"version":3,"sources":["/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js"],"names":["React","Tree","axios","defaultArray","directSalesChannel","filter","item","channelName","directSalesChannelList","subChannel","map","name","debugData","children","console","log","containerStyles","width","height","svgSquare","shape","shapeProps","x","y","headers","CenteredTree","state","records","headerRecords","dimensions","treeContainer","getBoundingClientRect","setState","translate","tc","PureComponent"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,SAAzB;;AACA,IAAMC,kBAAkB,GAAGD,YAAY,CAACE,MAAb,CAAoB,UAAAC,IAAI;AAAA,SAAIA,IAAI,CAACC,WAAL,KAAqB,wBAAzB;AAAA,CAAxB,CAA3B;AACA,IAAMC,sBAAsB,2BAAGJ,kBAAkB,CAAC,CAAD,CAArB,kFAAG,qBAAuBK,UAA1B,0DAAG,sBAAmCC,GAAnC,CAAuC,UAAAJ,IAAI,EAAI;AAC5E,SAAM;AACJK,IAAAA,IAAI,EAAEL,IAAI,CAACC;AADP,GAAN;AAGD,CAJ8B,CAA/B;AAMA,IAAMK,SAAS,GAAG,CAChB;AACED,EAAAA,IAAI,EAAE,WADR;AAEEE,EAAAA,QAAQ,EAAG,CACV;AACEF,IAAAA,IAAI,EAAE,wBADR;AAEEE,IAAAA,QAAQ,EAAE,CACTL,sBAAsB,CAAC,CAAD,CADb;AAFZ,GADU;AAFb,CADgB,CAAlB;AAeAM,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BH,SAA7B;AACA,IAAMI,eAAe,GAAG;AACtBC,EAAAA,KAAK,EAAE,MADe;AAEtBC,EAAAA,MAAM,EAAE;AAFc,CAAxB;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,UAAU,EAAE;AACVJ,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,MAAM,EAAE,EAFE;AAGVI,IAAAA,CAAC,EAAE,CAAC,EAHM;AAIVC,IAAAA,CAAC,EAAE,CAAC;AAJM;AAFI,CAAlB;AASA,IAAMC,OAAO,GAAGrB,YAAY,CAACO,GAAb,CAAiB,UAAAJ,IAAI,EAAI;AACvC,SAAM;AACJK,IAAAA,IAAI,EAAGL,IAAI,CAACC,WAAL,IAAoB,IAApB,GAA2BD,IAAI,CAACC,WAAhC,GAA8C;AADjD,GAAN;AAGD,CAJe,CAAhB;AAKAO,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,OAAvB;;IACqBC,Y;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAG,EADJ;AAENC,MAAAA,aAAa,EAAE;AAFT,K;;;;;;WAKR,6BAAoB;AAClB,UAAMC,UAAU,GAAG,KAAKC,aAAL,CAAmBC,qBAAnB,EAAnB;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE;AACTX,UAAAA,CAAC,EAAEO,UAAU,CAACZ,KAAX,GAAmB,EADb;AAETM,UAAAA,CAAC,EAAEM,UAAU,CAACZ,KAAX,GAAmB;AAFb;AADC,OAAd;AAMA;;;WACF,kBAAS;AAAA;;AACP;AAACH,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BZ,YAA3B;AAAyC;AAC1C,0BACE;AAAK,QAAA,KAAK,EAAEa,eAAZ;AAA6B,QAAA,GAAG,EAAE,aAACkB,EAAD;AAAA,iBAAS,MAAI,CAACJ,aAAL,GAAqBI,EAA9B;AAAA,SAAlC;AAAA,+BACE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEtB,SADR;AAEE,UAAA,SAAS,EAAE,KAAKc,KAAL,CAAWO,SAFxB;AAGE,UAAA,WAAW,EAAE,YAHf;AAIE,UAAA,YAAY,EAAEd,SAJhB;AAKE,UAAA,YAAY,EAAE;AALhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;;;;EA5BuCnB,KAAK,CAACmC,a;;SAA3BV,Y","sourcesContent":["import React from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\nimport axios from \"axios\";\r\nimport defaultArray from './array'\r\nconst directSalesChannel = defaultArray.filter(item => item.channelName === \"Indirect Sales Channel\");\r\nconst directSalesChannelList = directSalesChannel[0]?.subChannel?.map(item => {\r\n  return{\r\n    name: item.channelName\r\n  }\r\n})\r\n\r\nconst debugData = [\r\n  {\r\n    name :\"SALAM DMS\",\r\n    children : [\r\n     {\r\n       name: \"Indirect Sales Channel\",\r\n       children :[\r\n        directSalesChannelList[0]\r\n       ]\r\n     }\r\n    \r\n    ]\r\n  }\r\n \r\n];\r\nconsole.log(\"dataForRender\", debugData)\r\nconst containerStyles = {\r\n  width: \"100%\",\r\n  height: \"100vh\"\r\n};\r\n\r\nconst svgSquare = {\r\n  shape: \"rect\",\r\n  shapeProps: {\r\n    width: 20,\r\n    height: 20,\r\n    x: -10,\r\n    y: -10\r\n  }\r\n};\r\nconst headers = defaultArray.map(item => {\r\n  return{ \r\n    name : item.channelName != null ? item.channelName : \"\" ,\r\n  }\r\n})\r\nconsole.log(\"headers\", headers)\r\nexport default class CenteredTree extends React.PureComponent {\r\n  state = {\r\n    records : \"\",\r\n    headerRecords: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const dimensions = this.treeContainer.getBoundingClientRect();\r\n    this.setState({\r\n      translate: {\r\n        x: dimensions.width / 10,\r\n        y: dimensions.width / 3\r\n      }\r\n    });\r\n   }\r\n  render() {\r\n    {console.log(\"defaultArray\",defaultArray)}\r\n    return (\r\n      <div style={containerStyles} ref={(tc) => (this.treeContainer = tc)}>\r\n        <Tree\r\n          data={debugData}\r\n          translate={this.state.translate}\r\n          orientation={\"horizontal\"}\r\n          nodeSvgShape={svgSquare}\r\n          circleRadius={5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}