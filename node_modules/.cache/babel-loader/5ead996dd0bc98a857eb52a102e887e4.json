{"ast":null,"code":"import _slicedToArray from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport axios from \"axios\";\nimport defaultArray from './convertedArray';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Grid, Select, Typography } from '@mui/material';\nimport './custom-tree.css';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CenteredTree() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState('Retail'),\n      _useState2 = _slicedToArray(_useState, 2),\n      channel = _useState2[0],\n      setChannel = _useState2[1];\n\n  var channels = defaultArray.filter(function (item) {\n    return item.name === channel;\n  });\n  var debugData = [{\n    name: \"SALAM DMS\",\n    children: channels\n  }];\n  var containerStyles = {\n    width: \"100%\",\n    height: \"100vh\"\n  };\n\n  var handleChange = function handleChange(event) {\n    setChannel(event.target.value);\n  };\n\n  var _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      translate = _useState4[0],\n      setTranslate = _useState4[1];\n\n  var treeContainer = useRef(null);\n  useEffect(function () {\n    var dimensions = treeContainer.current.getBoundingClientRect();\n    setTranslate({\n      x: dimensions.width / 3,\n      y: dimensions.width / 3\n    });\n  }, []);\n\n  var color = function color(nodeDatum) {\n    console.log('nodeDatum', nodeDatum);\n    return nodeDatum.dealerType === \"pos_shop\" ? \"#a9d5e8\" : nodeDatum.dealerType === \"distributor\" || nodeDatum.dealerType === \"sub_distributor\" ? \"#faddb1\" : nodeDatum.name === \"SALAM DMS\" ? \"#cdf7cd\" : \"#fac3c3\";\n  };\n\n  var renderRectSvgNode = function renderRectSvgNode(_ref) {\n    var _nodeDatum$attributes, _nodeDatum$attributes2;\n\n    var nodeDatum = _ref.nodeDatum,\n        toggleNode = _ref.toggleNode;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"5\",\n        cy: \"5\",\n        r: \"10\",\n        fill: color(nodeDatum)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        strokeWidth: \"1\",\n        x: \"20\",\n        class: \"font\",\n        children: nodeDatum.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, _this), ((_nodeDatum$attributes = nodeDatum.attributes) === null || _nodeDatum$attributes === void 0 ? void 0 : _nodeDatum$attributes.department) && /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        x: \"20\",\n        dy: \"20\",\n        strokeWidth: \"1\",\n        children: [\"Department: \", (_nodeDatum$attributes2 = nodeDatum.attributes) === null || _nodeDatum$attributes2 === void 0 ? void 0 : _nodeDatum$attributes2.department]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    ref: treeContainer,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        width: \"300px !important\",\n        border: \"1px solid\",\n        height: \"100%\",\n        margin: \"0\",\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        style: {\n          border: \"1px solid\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControl, {\n          style: {\n            margin: \"30px 0px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Select Channel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: channel,\n            label: \"Select Channel\",\n            onChange: handleChange,\n            children: defaultArray.map(function (item) {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.name,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 41\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          component: \"h3\",\n          style: {\n            margin: \"30px 0px\"\n          },\n          children: \"Ledger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          sx: {\n            width: '100%'\n          },\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            icon: false,\n            severity: \"warning\",\n            children: \"Distributor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            icon: false,\n            severity: \"info\",\n            children: \"POS Shop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            icon: false,\n            severity: \"success\",\n            children: \"SALAM DMS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            icon: false,\n            severity: \"error\",\n            children: \"Channels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        style: {\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Tree, {\n          data: debugData,\n          translate: translate,\n          orientation: \"vertical\",\n          renderCustomNodeElement: renderRectSvgNode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CenteredTree, \"36m23iRDJCR+B4P1vAIod8zwtcA=\");\n\n_c = CenteredTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CenteredTree\");","map":{"version":3,"sources":["/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js"],"names":["React","useState","useEffect","useRef","Tree","axios","defaultArray","Box","InputLabel","MenuItem","FormControl","Grid","Select","Typography","Alert","Stack","CenteredTree","channel","setChannel","channels","filter","item","name","debugData","children","containerStyles","width","height","handleChange","event","target","value","x","y","translate","setTranslate","treeContainer","dimensions","current","getBoundingClientRect","color","nodeDatum","console","log","dealerType","renderRectSvgNode","toggleNode","attributes","department","border","margin","overflow","map","display","marginLeft","marginRight"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AACA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AAAA;;AAErC,kBAA8Bf,QAAQ,CAAC,QAAD,CAAtC;AAAA;AAAA,MAAOgB,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,QAAQ,GAAGb,YAAY,CAACc,MAAb,CAAoB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACC,IAAL,KAAcL,OAAlB;AAAA,GAAxB,CAAjB;AACA,MAAMM,SAAS,GAAG,CAChB;AACED,IAAAA,IAAI,EAAE,WADR;AAEEE,IAAAA,QAAQ,EAAEL;AAFZ,GADgB,CAAlB;AAOA,MAAMM,eAAe,GAAG;AACtBC,IAAAA,KAAK,EAAE,MADe;AAEtBC,IAAAA,MAAM,EAAE;AAFc,GAAxB;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BX,IAAAA,UAAU,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAGA,mBAAkC9B,QAAQ,CAAC;AACzC+B,IAAAA,CAAC,EAAE,CADsC;AAEzCC,IAAAA,CAAC,EAAE;AAFsC,GAAD,CAA1C;AAAA;AAAA,MAAOC,SAAP;AAAA,MAAkBC,YAAlB;;AAIA,MAAMC,aAAa,GAAGjC,MAAM,CAAC,IAAD,CAA5B;AACAD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMmC,UAAU,GAAGD,aAAa,CAACE,OAAd,CAAsBC,qBAAtB,EAAnB;AACAJ,IAAAA,YAAY,CAAC;AACXH,MAAAA,CAAC,EAAEK,UAAU,CAACX,KAAX,GAAmB,CADX;AAEXO,MAAAA,CAAC,EAAEI,UAAU,CAACX,KAAX,GAAmB;AAFX,KAAD,CAAZ;AAID,GANQ,EAMN,EANM,CAAT;;AAOA,MAAMc,KAAK,GAAG,SAARA,KAAQ,CAACC,SAAD,EAAe;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,SAAzB;AACA,WAAOA,SAAS,CAACG,UAAV,KAAyB,UAAzB,GAAsC,SAAtC,GAAkDH,SAAS,CAACG,UAAV,KAAyB,aAAzB,IAA0CH,SAAS,CAACG,UAAV,KAAyB,iBAAnE,GAAuF,SAAvF,GAAmGH,SAAS,CAACnB,IAAV,KAAmB,WAAnB,GAAiC,SAAjC,GAA6C,SAAzM;AACD,GAHD;;AAKA,MAAMuB,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;;AAAA,QAAGJ,SAAH,QAAGA,SAAH;AAAA,QAAcK,UAAd,QAAcA,UAAd;AAAA,wBACxB;AAAA,8BACE;AAAQ,QAAA,EAAE,EAAC,GAAX;AAAe,QAAA,EAAE,EAAC,GAAlB;AAAsB,QAAA,CAAC,EAAC,IAAxB;AAA6B,QAAA,IAAI,EAAEN,KAAK,CAACC,SAAD;AAAxC;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,WAAW,EAAC,GAA/B;AAAmC,QAAA,CAAC,EAAC,IAArC;AAA0C,QAAA,KAAK,EAAC,MAAhD;AAAA,kBACGA,SAAS,CAACnB;AADb;AAAA;AAAA;AAAA;AAAA,eAFF,EAKG,0BAAAmB,SAAS,CAACM,UAAV,gFAAsBC,UAAtB,kBACC;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,CAAC,EAAC,IAArB;AAA0B,QAAA,EAAE,EAAC,IAA7B;AAAkC,QAAA,WAAW,EAAC,GAA9C;AAAA,6DACeP,SAAS,CAACM,UADzB,2DACe,uBAAsBC,UADrC;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ;AAAA;AAAA;AAAA;AAAA;AAAA,aADwB;AAAA,GAA1B;;AAaA,sBAEE;AAAK,IAAA,KAAK,EAAEvB,eAAZ;AAA6B,IAAA,GAAG,EAAEW,aAAlC;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,KAAK,EAAE;AAAEV,QAAAA,KAAK,EAAE,kBAAT;AAA6BuB,QAAAA,MAAM,EAAE,WAArC;AAAkDtB,QAAAA,MAAM,EAAE,MAA1D;AAAkEuB,QAAAA,MAAM,EAAE,GAA1E;AAA+EC,QAAAA,QAAQ,EAAE;AAAzF,OAAvB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AAAEF,UAAAA,MAAM,EAAE;AAAV,SAAzB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE;AAAT,WAApB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,OAAO,EAAC,0BADV;AAEE,YAAA,EAAE,EAAC,oBAFL;AAGE,YAAA,KAAK,EAAEjC,OAHT;AAIE,YAAA,KAAK,EAAC,gBAJR;AAKE,YAAA,QAAQ,EAAEW,YALZ;AAAA,sBAOGtB,YAAY,CAAC8C,GAAb,CAAiB,UAAA/B,IAAI;AAAA,kCAAI,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAEA,IAAI,CAACC,IAAtB;AAAA,0BAA6BD,IAAI,CAACC;AAAlC;AAAA;AAAA;AAAA;AAAA,uBAAJ;AAAA,aAArB;AAPH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,GAApB;AAAwB,UAAA,SAAS,EAAC,IAAlC;AAAuC,UAAA,KAAK,EAAE;AAAC4B,YAAAA,MAAM,EAAE;AAAT,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE,QAAC,KAAD;AAAO,UAAA,EAAE,EAAE;AAAExB,YAAAA,KAAK,EAAE;AAAT,WAAX;AAA8B,UAAA,OAAO,EAAE,CAAvC;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAb;AAAoB,YAAA,QAAQ,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAb;AAAoB,YAAA,QAAQ,EAAC,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAb;AAAoB,YAAA,QAAQ,EAAC,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD;AAAO,YAAA,IAAI,EAAE,KAAb;AAAoB,YAAA,QAAQ,EAAC,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,KAAK,EAAE;AACvB2B,UAAAA,OAAO,EAAE,OADc;AAEvBC,UAAAA,UAAU,EAAE,MAFW;AAGvBC,UAAAA,WAAW,EAAE;AAHU,SAAzB;AAAA,+BAKE,QAAC,IAAD;AACE,UAAA,IAAI,EAAEhC,SADR;AAEE,UAAA,SAAS,EAAEW,SAFb;AAGE,UAAA,WAAW,EAAE,UAHf;AAIE,UAAA,uBAAuB,EAAEW;AAJ3B;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAFF;AAsDD;;GAxGuB7B,Y;;KAAAA,Y","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\nimport axios from \"axios\";\r\nimport defaultArray from './convertedArray';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport { Grid, Select,Typography } from '@mui/material';\r\nimport './custom-tree.css';\r\nimport Alert from '@mui/material/Alert';\r\nimport Stack from '@mui/material/Stack';\r\nexport default function CenteredTree() {\r\n\r\n  const [channel, setChannel] = useState('Retail');\r\n\r\n  const channels = defaultArray.filter(item => item.name === channel)\r\n  const debugData = [\r\n    {\r\n      name: \"SALAM DMS\",\r\n      children: channels\r\n    }\r\n\r\n  ];\r\n  const containerStyles = {\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setChannel(event.target.value);\r\n  };\r\n  const [translate, setTranslate] = useState({\r\n    x: 0,\r\n    y: 0\r\n  })\r\n  const treeContainer = useRef(null)\r\n  useEffect(() => {\r\n    const dimensions = treeContainer.current.getBoundingClientRect();\r\n    setTranslate({\r\n      x: dimensions.width / 3,\r\n      y: dimensions.width / 3\r\n    })\r\n  }, []);\r\n  const color = (nodeDatum) => {\r\n    console.log('nodeDatum', nodeDatum)\r\n    return nodeDatum.dealerType === \"pos_shop\" ? \"#a9d5e8\" : nodeDatum.dealerType === \"distributor\" || nodeDatum.dealerType === \"sub_distributor\" ? \"#faddb1\" : nodeDatum.name === \"SALAM DMS\" ? \"#cdf7cd\" : \"#fac3c3\";\r\n  }\r\n\r\n  const renderRectSvgNode = ({ nodeDatum, toggleNode }) => (\r\n    <g>\r\n      <circle cx=\"5\" cy=\"5\" r=\"10\" fill={color(nodeDatum)} />\r\n      <text fill=\"black\" strokeWidth=\"1\" x=\"20\" class=\"font\">\r\n        {nodeDatum.name}\r\n      </text>\r\n      {nodeDatum.attributes?.department && (\r\n        <text fill=\"black\" x=\"20\" dy=\"20\" strokeWidth=\"1\">\r\n          Department: {nodeDatum.attributes?.department}\r\n        </text>\r\n      )}\r\n    </g>\r\n  );\r\n  return (\r\n\r\n    <div style={containerStyles} ref={treeContainer} >\r\n      <Grid container style={{ width: \"300px !important\", border: \"1px solid\", height: \"100%\", margin: \"0\", overflow: \"hidden\" }}>\r\n        <Grid item xs={3} style={{ border: \"1px solid\" }}>\r\n          <FormControl style={{margin: \"30px 0px\"}} >\r\n            <InputLabel id=\"demo-simple-select-label\">Select Channel</InputLabel>\r\n            <Select\r\n              labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={channel}\r\n              label=\"Select Channel\"\r\n              onChange={handleChange}\r\n            >\r\n              {defaultArray.map(item => <MenuItem value={item.name}>{item.name}</MenuItem>)}\r\n            </Select>\r\n          </FormControl>\r\n          <Typography variant=\"p\" component=\"h3\" style={{margin: \"30px 0px\"}}>\r\n            Ledger\r\n          </Typography>\r\n          <Stack sx={{ width: '100%' }} spacing={2}>\r\n            <Alert icon={false} severity=\"warning\">Distributor</Alert>\r\n            <Alert icon={false} severity=\"info\">POS Shop</Alert>\r\n            <Alert icon={false} severity=\"success\">SALAM DMS</Alert>\r\n            <Alert icon={false} severity=\"error\">Channels</Alert>\r\n          </Stack>\r\n        </Grid>\r\n        <Grid item xs={9} style={{\r\n          display: \"block\",\r\n          marginLeft: \"auto\",\r\n          marginRight: \"auto\",\r\n        }}>\r\n          <Tree\r\n            data={debugData}\r\n            translate={translate}\r\n            orientation={\"vertical\"}\r\n            renderCustomNodeElement={renderRectSvgNode}\r\n          />\r\n\r\n        </Grid>\r\n\r\n      </Grid>\r\n      {/* <Box sx={{ maxWidth: 300 }} style={{width:\"30%\"}}>\r\n      <p align=\"left\">Yellow</p>\r\n    <p align=\"left\">Blue</p>\r\n    <p align=\"left\">Black</p>\r\n      </Box> */}\r\n      {/* <div style={{width: \"30%\"}}>\r\n      <p align=\"left\">Yellow</p>\r\n    <p align=\"left\">Blue</p>\r\n    <p align=\"left\">Black</p>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}