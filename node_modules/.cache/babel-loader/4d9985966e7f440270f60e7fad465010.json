{"ast":null,"code":"import _toConsumableArray from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport axios from \"axios\";\nimport defaultArray from './convertedArray';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport './custom-tree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CenteredTree() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState('Retail'),\n      _useState2 = _slicedToArray(_useState, 2),\n      channel = _useState2[0],\n      setChannel = _useState2[1];\n\n  var channels = defaultArray.filter(function (item) {\n    return item.name === channel;\n  }); // const styleValues = channels[0].children.map(item => item.dealerType);\n  // console.log(\"valyesrrrr....\", channels[0].children.map(item => item.dealerType))\n\n  function flatten(channels) {\n    return channels ? channels[0].reduce(function (result, item) {\n      return [].concat(_toConsumableArray(result), [{\n        name: item.name\n      }], _toConsumableArray(flatten(item.children)));\n    }, []) : [];\n  }\n\n  console.log(\"ftn\", channels);\n  var debugData = [{\n    name: \"SALAM DMS\",\n    children: channels\n  }];\n  var containerStyles = {\n    width: \"100%\",\n    height: \"100vh\"\n  };\n  var svgSquare = {\n    shape: \"rect\",\n    shapeProps: {\n      width: 20,\n      height: 20,\n      x: -10,\n      y: -10\n    }\n  };\n\n  var handleChange = function handleChange(event) {\n    setChannel(event.target.value);\n  };\n\n  var _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      translate = _useState4[0],\n      setTranslate = _useState4[1];\n\n  var treeContainer = useRef(null);\n  useEffect(function () {\n    var dimensions = treeContainer.current.getBoundingClientRect();\n    setTranslate({\n      x: dimensions.width / 10,\n      y: dimensions.width / 3\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    ref: treeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        maxWidth: 120\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-label\",\n          children: \"Select Channel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-label\",\n          id: \"demo-simple-select\",\n          value: channel,\n          label: \"Select Channel\",\n          onChange: handleChange,\n          children: defaultArray.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.name,\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 37\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), console.log(\"debugData\", debugData), /*#__PURE__*/_jsxDEV(Tree, {\n      data: debugData,\n      translate: translate,\n      orientation: \"vertical\",\n      nodeSvgShape: svgSquare,\n      rootNodeClassName: \"node__root\",\n      branchNodeClassName: \"node__branch\" //\n      ,\n      leafNodeClassName: \"node__leaf\",\n      circleRadius: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n} // export default class CenteredTree extends React.PureComponent {\n//   state = {\n//   };\n//   componentDidMount() {\n//     const dimensions = this.treeContainer.getBoundingClientRect();\n//     this.setState({\n//       translate: {\n//         x: dimensions.width / 10,\n//         y: dimensions.width / 3\n//       }\n//     });\n//    }\n//   render() {\n//     {console.log(\"defaultArray\",defaultArray)}\n//     return (\n//       <div style={containerStyles} ref={(tc) => (this.treeContainer = tc)}>\n//         <Tree\n//           data={debugData}\n//           translate={this.state.translate}\n//           orientation={\"vertical\"}\n//           nodeSvgShape={svgSquare}\n//           circleRadius={5}\n//         />\n//       </div>\n//     );\n//   }\n// }\n\n_s(CenteredTree, \"36m23iRDJCR+B4P1vAIod8zwtcA=\");\n\n_c = CenteredTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CenteredTree\");","map":{"version":3,"sources":["/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js"],"names":["React","useState","useEffect","useRef","Tree","axios","defaultArray","Box","InputLabel","MenuItem","FormControl","Select","CenteredTree","channel","setChannel","channels","filter","item","name","flatten","reduce","result","children","console","log","debugData","containerStyles","width","height","svgSquare","shape","shapeProps","x","y","handleChange","event","target","value","translate","setTranslate","treeContainer","dimensions","current","getBoundingClientRect","maxWidth","map"],"mappings":"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","sourcesContent":["import React,{useState, useEffect, useRef} from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\nimport axios from \"axios\";\r\nimport defaultArray from './convertedArray';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport './custom-tree.css';\r\nexport default function CenteredTree () {\r\n  \r\n  const [channel, setChannel] = useState('Retail');\r\n  \r\n  const channels = defaultArray.filter(item => item.name === channel )\r\n// const styleValues = channels[0].children.map(item => item.dealerType);\r\n// console.log(\"valyesrrrr....\", channels[0].children.map(item => item.dealerType))\r\nfunction flatten(channels) {\r\n  return channels? channels[0].reduce((result, item) => [\r\n      ...result,\r\n      { name: item.name },\r\n      ...flatten(item.children)\r\n  ], []) : [];\r\n}\r\nconsole.log(\"ftn\", channels)\r\n  const debugData = [\r\n    {\r\n      name :\"SALAM DMS\",\r\n      children : channels\r\n    }\r\n   \r\n  ];\r\n  const containerStyles = {\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  };\r\n  \r\n  const svgSquare = {\r\n    shape: \"rect\",\r\n    shapeProps: {\r\n      width: 20,\r\n      height: 20,\r\n      x: -10,\r\n      y: -10\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    setChannel(event.target.value);\r\n  };\r\n  const [translate, setTranslate] = useState({\r\n    x: 0,\r\n    y: 0\r\n  })\r\n  const treeContainer = useRef(null)\r\n  useEffect(() => {\r\n    const dimensions = treeContainer.current.getBoundingClientRect();\r\n    setTranslate({\r\n        x: dimensions.width / 10,\r\n        y: dimensions.width / 3\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    \r\n    <div style={containerStyles} ref={treeContainer}>\r\n       <Box sx={{ maxWidth: 120 }}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\">Select Channel</InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={channel}\r\n          label=\"Select Channel\"\r\n          onChange={handleChange}\r\n        >\r\n          \r\n          {defaultArray.map(item => <MenuItem value={item.name}>{item.name}</MenuItem> )}\r\n        </Select>\r\n      </FormControl>\r\n    </Box>\r\n    {console.log(\"debugData\", debugData)}\r\n      <Tree\r\n        data={debugData}\r\n        translate={translate}\r\n        orientation={\"vertical\"}\r\n        nodeSvgShape={svgSquare}\r\n        rootNodeClassName={\"node__root\"}\r\n        branchNodeClassName={\"node__branch\"}  //\r\n        leafNodeClassName=\"node__leaf\"\r\n        circleRadius={5}\r\n      />\r\n    </div>\r\n  );\r\n} \r\n// export default class CenteredTree extends React.PureComponent {\r\n//   state = {\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     const dimensions = this.treeContainer.getBoundingClientRect();\r\n//     this.setState({\r\n//       translate: {\r\n//         x: dimensions.width / 10,\r\n//         y: dimensions.width / 3\r\n//       }\r\n//     });\r\n//    }\r\n//   render() {\r\n//     {console.log(\"defaultArray\",defaultArray)}\r\n//     return (\r\n//       <div style={containerStyles} ref={(tc) => (this.treeContainer = tc)}>\r\n//         <Tree\r\n//           data={debugData}\r\n//           translate={this.state.translate}\r\n//           orientation={\"vertical\"}\r\n//           nodeSvgShape={svgSquare}\r\n//           circleRadius={5}\r\n//         />\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}