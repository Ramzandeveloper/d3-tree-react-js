{"ast":null,"code":"import _slicedToArray from \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Tree from \"react-d3-tree\";\nimport axios from \"axios\";\nimport defaultArray from './convertedArray';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport { Grid, Select } from '@mui/material';\nimport './custom-tree.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CenteredTree() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState('Retail'),\n      _useState2 = _slicedToArray(_useState, 2),\n      channel = _useState2[0],\n      setChannel = _useState2[1];\n\n  var channels = defaultArray.filter(function (item) {\n    return item.name === channel;\n  });\n  var debugData = [{\n    name: \"SALAM DMS\",\n    children: channels\n  }];\n  var containerStyles = {\n    width: \"100%\",\n    height: \"100vh\"\n  };\n\n  var handleChange = function handleChange(event) {\n    setChannel(event.target.value);\n  };\n\n  var _useState3 = useState({\n    x: 0,\n    y: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      translate = _useState4[0],\n      setTranslate = _useState4[1];\n\n  var treeContainer = useRef(null);\n  useEffect(function () {\n    var dimensions = treeContainer.current.getBoundingClientRect();\n    setTranslate({\n      x: dimensions.width / 3,\n      y: dimensions.width / 3\n    });\n  }, []);\n\n  var color = function color(nodeDatum) {\n    console.log('nodeDatum', nodeDatum);\n    return nodeDatum.dealerType === \"pos_shop\" ? \"blue\" : nodeDatum.dealerType === \"distributor\" || nodeDatum.dealerType === \"sub_distributor\" ? \"yellow\" : nodeDatum.name === \"SALAM DMS\" ? \"green\" : \"black\";\n  };\n\n  var renderRectSvgNode = function renderRectSvgNode(_ref) {\n    var _nodeDatum$attributes, _nodeDatum$attributes2;\n\n    var nodeDatum = _ref.nodeDatum,\n        toggleNode = _ref.toggleNode;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"5\",\n        cy: \"5\",\n        r: \"10\",\n        fill: color(nodeDatum)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        strokeWidth: \"1\",\n        x: \"20\",\n        class: \"font\",\n        children: nodeDatum.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, _this), ((_nodeDatum$attributes = nodeDatum.attributes) === null || _nodeDatum$attributes === void 0 ? void 0 : _nodeDatum$attributes.department) && /*#__PURE__*/_jsxDEV(\"text\", {\n        fill: \"black\",\n        x: \"20\",\n        dy: \"20\",\n        strokeWidth: \"1\",\n        children: [\"Department: \", (_nodeDatum$attributes2 = nodeDatum.attributes) === null || _nodeDatum$attributes2 === void 0 ? void 0 : _nodeDatum$attributes2.department]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: containerStyles,\n    ref: treeContainer,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      continer: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        style: {\n          width: \"30%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            maxWidth: 120\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"demo-simple-select-label\",\n              children: \"Select Channel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"demo-simple-select-label\",\n              id: \"demo-simple-select\",\n              value: channel,\n              label: \"Select Channel\",\n              onChange: handleChange,\n              children: defaultArray.map(function (item) {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: item.name,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 39\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        sm: 12,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          align: \"left\",\n          children: \"Yellow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          align: \"left\",\n          children: \"Blue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          align: \"left\",\n          children: \"Black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tree, {\n      data: debugData,\n      translate: translate,\n      orientation: \"vertical\",\n      renderCustomNodeElement: renderRectSvgNode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CenteredTree, \"36m23iRDJCR+B4P1vAIod8zwtcA=\");\n\n_c = CenteredTree;\n\nvar _c;\n\n$RefreshReg$(_c, \"CenteredTree\");","map":{"version":3,"sources":["/Users/ramzandeveloper/Desktop/Repos/OtherRepos/treeReactJs/reactD3/d3-tree-react-example/src/Tree.js"],"names":["React","useState","useEffect","useRef","Tree","axios","defaultArray","Box","InputLabel","MenuItem","FormControl","Grid","Select","CenteredTree","channel","setChannel","channels","filter","item","name","debugData","children","containerStyles","width","height","handleChange","event","target","value","x","y","translate","setTranslate","treeContainer","dimensions","current","getBoundingClientRect","color","nodeDatum","console","log","dealerType","renderRectSvgNode","toggleNode","attributes","department","maxWidth","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Tree from \"react-d3-tree\";\r\nimport axios from \"axios\";\r\nimport defaultArray from './convertedArray';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport {Grid , Select} from '@mui/material';\r\nimport './custom-tree.css';\r\nexport default function CenteredTree() {\r\n\r\n  const [channel, setChannel] = useState('Retail');\r\n\r\n  const channels = defaultArray.filter(item => item.name === channel)\r\n  const debugData = [\r\n    {\r\n      name: \"SALAM DMS\",\r\n      children: channels\r\n    }\r\n\r\n  ];\r\n  const containerStyles = {\r\n    width: \"100%\",\r\n    height: \"100vh\"\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setChannel(event.target.value);\r\n  };\r\n  const [translate, setTranslate] = useState({\r\n    x: 0,\r\n    y: 0\r\n  })\r\n  const treeContainer = useRef(null)\r\n  useEffect(() => {\r\n    const dimensions = treeContainer.current.getBoundingClientRect();\r\n    setTranslate({\r\n      x: dimensions.width / 3,\r\n      y: dimensions.width / 3\r\n    })\r\n  }, []);\r\n  const color =(nodeDatum)=>{\r\n    console.log('nodeDatum', nodeDatum)\r\n    return nodeDatum.dealerType === \"pos_shop\" ?  \"blue\" : nodeDatum.dealerType === \"distributor\" || nodeDatum.dealerType === \"sub_distributor\" ? \"yellow\" : nodeDatum.name === \"SALAM DMS\" ? \"green\" : \"black\";\r\n     }\r\n  const renderRectSvgNode = ({ nodeDatum, toggleNode }) => (\r\n    <g>\r\n      <circle cx=\"5\" cy=\"5\" r=\"10\" fill={color(nodeDatum)}/>\r\n      <text fill=\"black\" strokeWidth=\"1\" x=\"20\" class=\"font\">\r\n        {nodeDatum.name}\r\n      </text>\r\n      {nodeDatum.attributes?.department && (\r\n        <text fill=\"black\" x=\"20\" dy=\"20\" strokeWidth=\"1\">\r\n          Department: {nodeDatum.attributes?.department}\r\n        </text>\r\n      )}\r\n    </g>\r\n  );\r\n  return (\r\n\r\n    <div style={containerStyles} ref={treeContainer}>\r\n      <Grid continer >\r\n\r\n        <Grid item sm={12}style={{width:\"30%\"}} >\r\n        <Box sx={{ maxWidth: 120 }}>\r\n        <FormControl fullWidth>\r\n          <InputLabel id=\"demo-simple-select-label\">Select Channel</InputLabel>\r\n          <Select\r\n            labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={channel}\r\n            label=\"Select Channel\"\r\n            onChange={handleChange}\r\n          >\r\n            {defaultArray.map(item => <MenuItem value={item.name}>{item.name}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n        </Grid>\r\n        <Grid item sm={12} >\r\n    <p align=\"left\">Yellow</p>\r\n    <p align=\"left\">Blue</p>\r\n    <p align=\"left\">Black</p>\r\n        </Grid>\r\n      </Grid>\r\n     \r\n      <Tree\r\n        data={debugData}\r\n        translate={translate}\r\n        orientation={\"vertical\"}\r\n        renderCustomNodeElement={renderRectSvgNode}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}